<?xml version="1.0" encoding="UTF-8"?>
<beans 
		 xmlns="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:tx="http://www.springframework.org/schema/tx"
		 xmlns:mvc="http://www.springframework.org/schema/mvc" 
		 xmlns:websocket="http://www.springframework.org/schema/websocket"
		 xsi:schemaLocation="http://www.springframework.org/schema/mvc
		 http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		 	http://www.springframework.org/schema/beans
		 	http://www.springframework.org/schema/beans/spring-beans.xsd
		 	http://www.springframework.org/schema/tx
		 	http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		 	http://www.springframework.org/schema/websocket 
 			http://www.springframework.org/schema/websocket/spring-websocket.xsd">
	<tx:annotation-driven transaction-manager="transactionManager"/>
	<bean destroy-method="close" class="com.mchange.v2.c3p0.ComboPooledDataSource" id="dataSource">

<property value="oracle.jdbc.driver.OracleDriver" name="driverClass"/>

<property value="jdbc:oracle:thin:@localhost:1521:orcl" name="jdbcUrl"/>

<property value="C##kang" name="user"/>

<property value="1234" name="password"/>

<property value="100" name="maxPoolSize"/>

<property value="600" name="maxIdleTime"/>

<property value="300" name="idleConnectionTestPeriod"/>

</bean>
	<bean id="transactionManager"
			class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"/>
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource"/>
			<property name="configLocation"
						value="classpath:config/mybatis-config.xml"/>
			<property name="mapperLocations">
				<list>
					<value>classpath:config/sqlmap-board.xml</value>
					<value>classpath:config/sqlmap-boardLike.xml</value>
					<value>classpath:config/sqlmap-member.xml</value>
					<value>classpath:config/sqlmap-friend.xml</value>
					<value>classpath:config/sqlmap-reply.xml</value>
				</list>
			</property>
	</bean>
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate"
			destroy-method="clearCache">
			<constructor-arg ref="sqlSessionFactory"/>
			</bean>
	<bean id="boardDao" class="board.dao.BoardDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>

	<bean id="boardServiceImpl" class="board.service.BoardServiceImpl">
		<property name="boardDao" ref="boardDao"/>
	</bean>
	<bean id="replyDao" class="board.dao.ReplyDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>

	<bean id="replyServiceImpl" class="board.service.ReplyServiceImpl">
		<property name="replyDao" ref="replyDao"/>
	</bean>
	<bean id="boardLikeDao" class="board.dao.BoardLikeDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>

	<bean id="boardLikeServiceImpl" class="board.service.BoardLikeServiceImpl">
		<property name="boardLikeDao" ref="boardLikeDao"/>
	</bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="maxUploadSize" value="10485760" />
		</bean>

		<bean id="memberDao" class="member.dao.MemberDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="memberServiceImpl" class="member.service.MemberServiceImpl">
		<property name="memberDao" ref="memberDao"/>
	</bean>	
	
	<bean id="friendDao" class="friend.dao.FriendDaoMybatis">
		<constructor-arg ref="sqlSessionTemplate"></constructor-arg>
	</bean>
	<bean id="friendServiceImpl" class="friend.service.FriendServiceImpl">
		<property name="friendDao" ref="friendDao"/>
	</bean>	
	
	<bean id="websocketHandler" class="friend.controller.WebsocketHandler">
			<property name="friendService" ref="friendServiceImpl"/>	
	</bean>
	<websocket:handlers>
    <websocket:mapping handler="websocketHandler" path="chat"/>
    <websocket:handshake-interceptors>
		   	<bean class="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
    </websocket:handshake-interceptors>
    <websocket:sockjs/>
	</websocket:handlers>
	</beans>